@model TaskoMask.Application.Core.Dtos.Operators.OperatorInputDto

@{
    ViewBag.Title = "Create new operator";
}


<div class="grid-50 tablet-grid-50 mobile-grid-100">
    <div class="block">
        <div class="block-content">
            <form class="form" asp-action="create" data-ajax="true" data-ajax-loading="#global-ajax-loading" data-ajax-method="Post">

                <fieldset>
                    @Html.AntiForgeryToken()


                    @Html.LabelFor(model => model.DisplayName)
                    @Html.TextBoxFor(model => model.DisplayName, new { @class = "form-input-1" })
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "form-message is-error" })

                    @Html.LabelFor(model => model.PhoneNumber)
                    @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-input-1" })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "form-message is-error" })



                    @Html.LabelFor(model => model.Email)
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-input-1" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "form-message is-error" })


                    @Html.LabelFor(model => model.UserName)
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-input-1" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "form-message is-error" })



                    @Html.LabelFor(model => model.Password)
                    @Html.PasswordFor(model => model.Password, new { @class = "form-input-1" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "form-message is-error" })


                    @Html.LabelFor(model => model.ConfirmPassword)
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-input-1" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "form-message is-error" })

                    <hr />
                    <button type="submit" class="btn btn-primary">
                        ذخیره تغییرات
                    </button>
                    <a href="@Url.Action("Index", "Users", new { })" class="btn btn-default">
                        بازگشت
                    </a>
                </fieldset>
            </form>

        </div>
    </div>
</div>
