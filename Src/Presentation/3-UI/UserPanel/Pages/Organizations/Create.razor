@using TaskoMask.Application.Share.Dtos.Team.Organizations
@inject TaskoMask.Presentation.Framework.Share.Contracts.IOrganizationClientService OrganizationClientService


<EditForm Model="OrganizationModel" OnValidSubmit="HandCreateOrganization">

    <hr />
    <DataAnnotationsValidator />

    <div class="form-group">
        <InputText @bind-Value="OrganizationModel.Name" placeholder="Name" class="form-control"></InputText>
        <ValidationMessage For="()=>OrganizationModel.Name" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-group">
        <InputText @bind-Value="OrganizationModel.Description" placeholder="Description" class="form-control"></InputText>
        <ValidationMessage For="()=>OrganizationModel.Description" class="text-danger"></ValidationMessage>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Create</button>
        @*<a class="btn btn-danger text-white">Cancel</a>*@
    </div>

</EditForm>

@code {
    private OrganizationUpsertDto OrganizationModel = new OrganizationUpsertDto();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    private async Task HandCreateOrganization()
    {
        var result = await OrganizationClientService.Create(OrganizationModel);

         ModalInstance.CloseAsync();

        if (result.IsSuccess)
            ToastService.ShowSuccess(result.Value.Message, result.Message);
        else
            ToastService.ShowError(result.Errors.ParseToHtml(), result.Message);
    }

}
