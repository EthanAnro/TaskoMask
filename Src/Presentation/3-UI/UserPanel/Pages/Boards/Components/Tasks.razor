@using TaskoMask.Application.Share.Dtos.Workspace.Tasks

@if (!Model.Any())
{
    <div class="alert alert-warning">
        <b>There isn't any task yet!</b>
        <hr>
        <small>
            <b>
                <a @onclick="@(()=>ShowCreateTaskModal())" class="text-info">
                    <i class="bi bi-card-list"></i>
                    Add new task
                </a>
            </b>
        </small>
    </div>
}
else
{
    <ul class="list-group list-group-flush">
        <li class="list-group-item list-group-item-warning">
            <i class="bi bi-list-task"></i>
            <a @onclick="@(()=>ShowCreateTaskModal())" class="text-black-50">Add new Task</a>
        </li>
        @foreach (var item in Model)
        {
            <li class="list-group-item">
                <i class="bi bi-list-task"></i>
                <a @onclick="@(()=>ShowUpdateTaskModal(item.Id))" class="text-black-50">
                    @item.Title
                </a>
            </li>
        }
    </ul>
}
@code {

    [Parameter]
    public IEnumerable<TaskBasicInfoDto> Model { get; set; }

    [Parameter]
    public string CardId { get; set; }



    /// <summary>
    ///
    /// </summary>
    private void ShowCreateTaskModal()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(TaskBasicInfoDto.CardId), CardId);
        ModalService.Show<Pages.Tasks.Components.Upsert>("Create Task", parameters, new ModalOptions { DisableBackgroundCancel = true });
    }


    /// <summary>
    ///
    /// </summary>
    private void ShowUpdateTaskModal(string taskId)
    {
        var parameters = new ModalParameters();
        parameters.Add("TaskId", taskId);
        ModalService.Show<Pages.Tasks.Components.Upsert>("Update Task", parameters, new ModalOptions { DisableBackgroundCancel = true });
    }

}
