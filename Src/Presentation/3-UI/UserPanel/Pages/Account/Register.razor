@page "/register"
@using TaskoMask.Application.Share.Dtos.Team.Members
@using Application.Share.Dtos.Common.Users
@inject TaskoMask.Presentation.Framework.Share.Contracts.IAccountClientService AccountClientService
@inject IJSRuntime JsRuntime

<section id="cover">
    <div id="cover-caption">
        <div class="container">
            <div class="row text-white">
                <div class="col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4">
                    <h3 class=" py-2 ">Register in TaskoMask!</h3>
                    <div class="px-2">
                        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegister" class="justify-content-center">
                            <DataAnnotationsValidator />
                            <div class="form-group">
                                <InputText @bind-Value="RegisterModel.DisplayName" placeholder="DisplayName" class="form-control"></InputText>
                                <ValidationMessage For="()=>RegisterModel.DisplayName" class="text-danger"></ValidationMessage>
                            </div>
                            <div class="form-group">
                                <InputText @bind-Value="RegisterModel.Email" placeholder="Email" class="form-control"></InputText>
                                <ValidationMessage For="()=>RegisterModel.Email" class="text-danger"></ValidationMessage>
                            </div>
                            <div class="form-group">
                                <InputText type="password" @bind-Value="RegisterModel.Password" placeholder="Password" class="form-control"></InputText>
                                <ValidationMessage For="()=>RegisterModel.Password" class="text-danger"></ValidationMessage>
                            </div>
                            <div class="form-group">
                                <InputText type="password" @bind-Value="RegisterModel.ConfirmPassword" placeholder="ConfirmPassword" class="form-control"></InputText>
                                <ValidationMessage For="()=>RegisterModel.ConfirmPassword" class="text-danger"></ValidationMessage>
                            </div>
                            <div class="form-group">
                                <a href="#">Forget Password</a>
                            </div>

                            <button type="submit" class="btn btn-primary btn-lg">Register</button>
                            <NavLink class="btn btn-secondary btn-lg" href="/login">
                                login
                            </NavLink>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private MemberRegisterDto RegisterModel = new MemberRegisterDto();

    private async Task HandleRegister()
    {
        //Register User
        var registerResult = await AccountClientService.Register(RegisterModel);
        if (!registerResult.IsSuccess)
        {
            await JsRuntime.InvokeVoidAsync($"alert", $"Register failed! message= {registerResult.Message}");
            return;
        }

        //Login User
        var loginResult = await AccountClientService.Login(new UserLoginDto { Email = RegisterModel.Email, Password = RegisterModel.Password });
        if (!loginResult.IsSuccess)
        {
            await JsRuntime.InvokeVoidAsync($"alert", $"login failed! message= {loginResult.Message}");
            return;
        }

        await JsRuntime.InvokeVoidAsync($"alert", $"Register Success! Token= {loginResult.Value}");
    }

}