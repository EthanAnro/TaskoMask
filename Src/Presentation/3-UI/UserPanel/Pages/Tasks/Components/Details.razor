@using TaskoMask.Presentation.UI.UserPanel.Pages.Tasks.Components
@inject TaskoMask.Presentation.Framework.Share.Contracts.ITaskClientService TaskClientService
@if (Model == null)
{
    <div class="spinner-loading"></div>
}
else
{
    <div class="row">
        <div class="col-md-8">
            <Upsert TaskId=@TaskId></Upsert>
            <Comments></Comments>
        </div>
        <hr />
        <div class="col-md-4">
            <State Model=@Model.Task></State>
            <Activities Model=@Model.Activities></Activities>
        </div>
    </div>
}
@code {

    [Parameter]
    public string TaskId { get; set; }

    TaskDetailsViewModel Model;

    /// <summary>
    /// Access to current modal
    /// </summary>
    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }



    /// <summary>
    ///
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        var taskResult = await TaskClientService.Get(TaskId);
        if (taskResult.IsSuccess)
            Model = taskResult.Value;
        else
        {
            //close the modal window
            ModalInstance.CloseAsync();
            ToastService.ShowError(taskResult.Errors.ParseToFragment(), taskResult.Message);
        }
    }
}
