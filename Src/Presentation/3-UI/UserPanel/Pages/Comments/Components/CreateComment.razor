@using TaskoMask.Application.Share.Dtos.Workspace.Comments
@using TaskoMask.Domain.Share.Enums
@inject TaskoMask.Presentation.Framework.Share.ApiContracts.ICommentApiService CommentApiService

<EditForm Model="CommentModel" OnValidSubmit="HandleCreate" class="form">
    <DataAnnotationsValidator />
    <input type="hidden" @bind="CommentModel.TaskId" />

    <div class="row">
        <div class="col-lg-12">
            <div class="input-group">

                <InputText @bind-Value="CommentModel.Content" class="form-control" placeholder="add a comment"></InputText>

                <span class="input-group-btn">
                    <button type="submit" class="btn btn-primary">add</button>
                </span>
            </div>
        </div>
    </div>
</EditForm>


@code {

    #region Fields and Parameters


    [Parameter]
    public string TaskId { get; set; }


    UpdateCommentDto CommentModel = new UpdateCommentDto();



    #endregion Fields and Parameters



    #region Protected Methods

    protected override Task OnInitializedAsync()
    {
        CommentModel.TaskId = TaskId;

        return base.OnInitializedAsync();
    }


    #endregion Protected Methods


    #region private Methods




    /// <summary>
    /// handle create model
    /// </summary>
    private async Task HandleCreate()
    {
        var result = await CommentApiService.Add(CommentModel);
        if (result.IsSuccess)
            CommentModel.Content = "";

        CommandResultHandler.Init()
            .WithResult(result)
            .WithComponentMessageType(MessageType.Comment_Created)
            .ShowErrorToast(ToastService)
            .PublishMessage(ComponentMessageService);
    }



    #endregion private Methods

}
