#----------------------------------------------------------------------------------
#                                                                                  |
# If you want to run all the clients and services and their dependencies without   |
# needing to debug them, you can run the below commands through CLI:               |
#                                                                                  |
# ...\TaskoMask\src\6-Docker> docker-compose build                                 |
# ...\TaskoMask\src\6-Docker> docker-compose up -d                                 |
#                                                                                  |
# But, if you need to do this in Visual Studio and debug some services, then you   |
# can modify the launchSettings and set the desired services to StartDebugging and |
# then select docker-compose in the debug items and click on DockerCompose         |
#                                                                                  |
# For more informition go to the releated documentation on GitHub:                 |
#                                                                                  |
# https://github.com/hamed-shirbandi/TaskoMask/wiki/Development-Setup              |
#----------------------------------------------------------------------------------

version: '3.4'

services:

  seq:
    container_name: seq
    image: datalust/seq
    restart: unless-stopped
    networks:
      - taskomask-network
    volumes:
      - seq:/data

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    networks:
      - taskomask-network
    volumes:
      - redis:/data/db

  mongo:
    container_name: mongo
    image: mongo:4.4.6
    restart: unless-stopped
    networks:
      - taskomask-network
    volumes:
      - mongo:/data/db
    
  monolith-api:
    container_name: monolith-api
    image: ${DOCKER_REGISTRY-}monolith-api
    restart: on-failure
    environment:
      Mongo__Read__Connection: "mongodb://mongo:27017"
      Mongo__Write__Connection: "mongodb://mongo:27017"
      Redis__Connection: "redis:6379"
    build:
      context: ../..
      dockerfile: src/2-Services/Monolith/Api/Monolith.Api/Dockerfile
    ports:
      - 5014:80
      - 5015:443
    networks:
      - taskomask-network
    depends_on:
      - redis
      - mongo

  user-panel-client:
    container_name: user-panel-client
    image: ${DOCKER_REGISTRY-}user-panel-client
    build:
      context: ../..
      dockerfile: src/4-Clients/UserPanel/Dockerfile
    ports:
      - "5010:80"
      - "5011:443"
    depends_on:
     - monolith-api

  website-client:
    container_name: website-client
    image: ${DOCKER_REGISTRY-}website-client
    build:
      context: ../..
      dockerfile: src/4-Clients/Website/Dockerfile
    ports:
      - "5008:80"
      - "5009:443"

networks:
  taskomask-network:

volumes:
  redis:
  mongo:
  seq:

