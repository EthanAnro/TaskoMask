version: '3.4'

services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    networks:
      - taskomask-network
    volumes:
      - redis:/data/db

  mongo:
    container_name: mongo
    image: mongo:4.4.6
    restart: unless-stopped
    networks:
      - taskomask-network
    volumes:
      - mongo:/data/db
    
  monolith-api:
    container_name: monolith-api
    image: ${DOCKER_REGISTRY-}monolith-api
    restart: on-failure
    environment:
      Mongo__Read__Connection: "mongodb://mongo:27017"
      Mongo__Write__Connection: "mongodb://mongo:27017"
      Redis__Connection: "redis:6379"
    build:
      context: ../..
      dockerfile: src/2-Services/Monolith/Api/Monolith.Api/Dockerfile
    ports:
      - 5013:80
      - 5014:443
    networks:
      - taskomask-network
    depends_on:
      - redis
      - mongo

  user-panel-client:
    container_name: user-panel-client
    image: user-panel-client
    build:
      context: ../..
      dockerfile: src/4-Clients/UserPanel/Dockerfile
    ports:
      - "8086:80"
    volumes:
      - taskomask:/usr/share/nginx/html
    depends_on:
     - monolith-api

networks:
  taskomask-network:

volumes:
  taskomask:
  redis:
  mongo: